; By default, testenvs are configured to:
; - don't skip dist (skipsdist = False)
; - don't skip the package installation (skip_install = False)
; - don't use source installation (usedevelop = False)
; where one of those steps is not necessary for the test,
; we set the associated flag (e.g. for linting we don't need
; the package installation).
[tox]
envlist = bandit, black, black-check, isort, isort-check, copyright_check, docs, flake8, liccheck, mypy, py{3.6,3.7,3.8,3.9}

[testenv]
basepython = python3
whitelist_externals = /bin/sh
passenv = *
extras = all
deps =
    pytest==5.3.5
    pytest-cov==2.8.1
    pytest-asyncio==0.10.0
    pytest-randomly==3.2.1
    pytest-custom-exit-code==0.3.0
    docker==4.2.0
    colorlog==4.1.0
    defusedxml==0.6.0
    oef==0.8.1
    gym==0.15.6
    numpy==1.18.1
    vyper==0.1.0b12
    openapi-core==0.13.2
    openapi-spec-validator==0.2.8
    black==19.10b0
    isort==5.5.2
    mistune==2.0.0a4
    aiohttp==3.6.2
    SQLAlchemy==1.3.16
    pexpect==4.8.0
    pytest-rerunfailures==9.0
    aioprometheus==20.0.1
    yoti==2.14.0
    ; Plugin dependencies. We need this
    ; because we use --no-deps to install the plugins.
    ; aea_crypto_cosmos/aea_crypto_fetchai
    ecdsa>=0.16
    bech32==1.2.0
    ; aea_crypto_ethereum
    web3==5.12.0
    ipfshttpclient==0.6.1
    eth-account==0.5.2

commands =
    python -m pip install --no-deps file://{toxinidir}/plugins/aea-crypto-ethereum
    python -m pip install --no-deps file://{toxinidir}/plugins/aea-crypto-cosmos
    python -m pip install --no-deps file://{toxinidir}/plugins/aea-crypto-fetchai
    pytest -rfE --doctest-modules aea packages/fetchai/connections packages/fetchai/protocols packages/fetchai/skills/confirmation_aw1 packages/fetchai/skills/confirmation_aw3 packages/fetchai/skills/confirmation_aw3 packages/fetchai/skills/generic_buyer packages/fetchai/skills/generic_seller packages/fetchai/skills/tac_control packages/fetchai/skills/tac_control_contract packages/fetchai/skills/tac_participation packages/fetchai/skills/tac_negotiation packages/fetchai/skills/simple_buyer packages/fetchai/skills/simple_data_request packages/fetchai/skills/simple_seller packages/fetchai/skills/simple_service_registration packages/fetchai/skills/simple_service_search tests/ packages/fetchai/skills/coin_price packages/fetchai/skills/fetch_beacon packages/fetchai/skills/simple_oracle packages/fetchai/skills/simple_oracle_client --cov-report=html --cov-report=xml --cov-report=term --cov-report=term-missing --cov=aea --cov=packages/fetchai/connections --cov=packages/fetchai/protocols --cov=packages/fetchai/skills/confirmation_aw1 --cov=packages/fetchai/skills/confirmation_aw2 --cov=packages/fetchai/skills/confirmation_aw3 --cov=packages/fetchai/skills/generic_buyer --cov=packages/fetchai/skills/generic_seller --cov=packages/fetchai/skills/tac_control --cov=packages/fetchai/skills/tac_control_contract --cov=packages/fetchai/skills/tac_participation --cov=packages/fetchai/skills/tac_negotiation --cov=packages/fetchai/skills/simple_buyer --cov=packages/fetchai/skills/simple_data_request --cov=packages/fetchai/skills/simple_seller --cov=packages/fetchai/skills/simple_service_registration --cov=packages/fetchai/skills/simple_service_search --cov=packages/fetchai/skills/coin_price --cov=packages/fetchai/skills/fetch_beacon --cov=packages/fetchai/skills/simple_oracle --cov=packages/fetchai/skills/simple_oracle_client --cov-config=.coveragerc {posargs}

[testenv:py3.6]
basepython = python3.6

[testenv:py3.7]
basepython = python3.7

[testenv:py3.7-cov]
basepython = python3.7
usedevelop = True

[testenv:py3.8]
basepython = python3.8

[testenv:py3.9]
basepython = python3.9

[plugins]
commands =
    python -m pip install --no-deps file://{toxinidir}/plugins/aea-crypto-ethereum
    python -m pip install --no-deps file://{toxinidir}/plugins/aea-crypto-cosmos
    python -m pip install --no-deps file://{toxinidir}/plugins/aea-crypto-fetchai
    pytest -rfE plugins/aea-crypto-fetchai/tests --cov-report=html --cov-report=xml --cov-report=term --cov-report=term-missing --cov=aea_crypto_fetchai --cov-config=.coveragerc --suppress-no-test-exit-code {posargs}
    pytest -rfE plugins/aea-crypto-ethereum/tests --cov-report=html --cov-report=xml --cov-report=term --cov-report=term-missing --cov-append --cov=aea_crypto_ethereum --cov-config=.coveragerc --suppress-no-test-exit-code {posargs}
    pytest -rfE plugins/aea-crypto-cosmos/tests --cov-report=html --cov-report=xml --cov-report=term --cov-report=term-missing --cov-append --cov=aea_crypto_cosmos --cov-config=.coveragerc --suppress-no-test-exit-code {posargs}

[testenv:plugins-py3.6]
basepython = python3.6
commands = {[plugins]commands}

[testenv:plugins-py3.7]
basepython = python3.7
commands = {[plugins]commands}

[testenv:plugins-py3.7-cov]
basepython = python3.7
usedevelop = True
commands = {[plugins]commands}

[testenv:plugins-py3.8]
basepython = python3.8
commands = {[plugins]commands}

[testenv:plugins-py3.9]
basepython = python3.9
commands = {[plugins]commands}

[testenv:bandit]
skipsdist = True
skip_install = True
deps = bandit==1.6.2
commands = bandit -r aea benchmark examples packages \
             plugins/aea-crypto-fetchai/aea_crypto_fetchai \
             plugins/aea-crypto-ethereum/aea_crypto_ethereum \
             plugins/aea-crypto-cosmos/aea_crypto_cosmos
           bandit -s B101 -r tests scripts

[testenv:black]
skipsdist = True
skip_install = True
deps = black==19.10b0
commands = black aea benchmark examples packages plugins scripts tests

[testenv:black-check]
skipsdist = True
skip_install = True
deps = black==19.10b0
commands = black aea benchmark examples packages plugins scripts tests --check --verbose

[testenv:isort]
skipsdist = True
skip_install = True
deps = isort==5.5.2
commands = isort aea benchmark examples packages plugins scripts tests

[testenv:isort-check]
skipsdist = True
skip_install = True
deps = isort==5.5.2
commands = isort --check-only --verbose aea benchmark examples packages plugins scripts tests

[testenv:copyright_check]
skipsdist = True
skip_install = True
deps =
commands = {toxinidir}/scripts/check_copyright_notice.py --directory {toxinidir}

[testenv:hash_check]
skipsdist = True
usedevelop = True
deps = ipfshttpclient==0.6.1
commands = {toxinidir}/scripts/generate_ipfs_hashes.py --check {posargs}

[testenv:package_version_checks]
skipsdist = True
usedevelop = True
deps =
commands = {toxinidir}/scripts/check_package_versions_in_docs.py

[testenv:package_dependencies_checks]
skipsdist = True
usedevelop = True
deps =
commands = {toxinidir}/scripts/check_packages.py

[testenv:docs]
skipsdist = True
skip_install = True
description = Build the documentation.
deps = markdown==3.2.1
       mkdocs==1.1
       mkdocs-material==4.6.3
       pymdown-extensions==6.3
       bs4==0.0.1
commands = pip3 install git+https://github.com/pugong/mkdocs-mermaid-plugin.git#egg=mkdocs-mermaid-plugin
           mkdocs build --clean

[testenv:docs-serve]
skipsdist = True
skip_install = True
description = Run a development server for working on documentation.
deps = markdown==3.2.1
       mkdocs==1.1
       mkdocs-material==4.6.3
       pymdown-extensions==6.3
       bs4==0.0.1
commands = pip3 install git+https://github.com/pugong/mkdocs-mermaid-plugin.git#egg=mkdocs-mermaid-plugin
           mkdocs build --clean
           python -c 'print("###### Starting local server. Press Control+C to stop server ######")'
           mkdocs serve -a localhost:8080

[testenv:flake8]
skipsdist = True
skip_install = True
deps = flake8==3.7.9
       flake8-bugbear==20.1.4
       flake8-docstrings==1.5.0
       flake8-eradicate==0.4.0
       flake8-isort==4.0.0
       pydocstyle==3.0.0
commands = flake8 aea benchmark examples packages plugins scripts tests

[testenv:liccheck]
skipsdist = True
usedevelop = True
deps = liccheck==0.4.3
commands = {toxinidir}/scripts/freeze_dependencies.py -o {envtmpdir}/requirements.txt
           liccheck -s strategy.ini -r {envtmpdir}/requirements.txt -l PARANOID

[testenv:mypy]
skipsdist = True
skip_install = True
deps = mypy==0.761
       aiohttp==3.6.2
       packaging==20.4
       yoti==2.14.0
commands = mypy aea packages --disallow-untyped-defs
           mypy benchmark examples  --check-untyped-defs
           mypy scripts tests

[testenv:pylint]
whitelist_externals = /bin/sh
skipsdist = True
deps = pylint==2.5.2
       pytest==5.3.5

commands =
    python -m pip install --no-deps file://{toxinidir}/plugins/aea-crypto-ethereum
    python -m pip install --no-deps file://{toxinidir}/plugins/aea-crypto-cosmos
    python -m pip install --no-deps file://{toxinidir}/plugins/aea-crypto-fetchai
    sh -c "pylint aea benchmark packages plugins/aea-crypto-fetchai/aea_crypto_fetchai plugins/aea-crypto-ethereum/aea_crypto_ethereum plugins/aea-crypto-cosmos/aea_crypto_cosmos scripts examples/* --disable=E1136"

[testenv:safety]
skipsdist = True
skip_install = True
deps = safety==1.8.5
commands = safety check -i 37524 -i 38038 -i 37776 -i 38039

[testenv:vulture]
skipsdist = True
skip_install = True
deps = vulture==2.1
commands = vulture aea scripts/whitelist.py --exclude "*_pb2.py"

[testenv:check_doc_links]
skipsdist = True
usedevelop = True
deps =
commands = {toxinidir}/scripts/check_doc_links.py

[testenv:check_api_docs]
skipsdist = True
usedevelop = True
deps = pydoc-markdown==3.3.0
commands = {toxinidir}/scripts/generate_api_docs.py --check-clean

[testenv:check_generate_all_protocols]
skipsdist = True
usedevelop = True
deps =
    ipfshttpclient==0.6.1
    black==19.10b0
    isort==5.5.2
commands = {toxinidir}/scripts/generate_all_protocols.py --check-clean

[testenv:spell_check]
skipsdist = True
usedevelop = True
deps =
commands = {toxinidir}/scripts/spell-check.sh
