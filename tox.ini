; By default, testenvs are configured to:
; - don't skip dist (skipsdist = False)
; - don't skip the package installation (skip_install = False)
; - don't use source installation (usedevelop = False)
; where one of those steps is not necessary for the test,
; we set the associated flag (e.g. for linting we don't need
; the package installation).
[tox]
envlist = bandit, black, black-check, copyright_check, docs, flake8, liccheck, mypy, py{3.6,3.7,3.8}

[testenv]
basepython = python3
whitelist_externals = /bin/sh
passenv = *
extras = all
deps =
    pytest==5.3.5
    pytest-cov==2.8.1
    pytest-asyncio==0.10.0
    pytest-randomly==3.2.1
    docker
    colorlog==4.1.0
    defusedxml==0.6.0
    oef==0.8.1
    gym==0.15.6
    numpy==1.18.1
    vyper==0.1.0b12
    openapi-core==0.13.2
    openapi-spec-validator==0.2.8
    black==19.10b0
    mistune==2.0.0a4
    aiohttp==3.6.2
    SQLAlchemy==1.3.16
    pynacl==1.3.0
    pexpect==4.8.0
    pytest-rerunfailures==9.0

commands = pip install -i https://test.pypi.org/simple/ fetch-p2p-api==0.0.2
           pytest -rfE --doctest-modules aea packages/fetchai/protocols packages/fetchai/connections tests/ --cov-report=html --cov-report=xml --cov-report=term --cov=aea --cov=packages/fetchai/protocols --cov=packages/fetchai/connections {posargs}

[testenv:py3.6]
basepython = python3.6

[testenv:py3.7]
basepython = python3.7

[testenv:py3.8]
basepython = python3.8

[testenv:bandit]
skipsdist = True
skip_install = True
deps = bandit==1.6.2
commands = bandit -s B101 -r aea benchmark examples packages scripts tests

[testenv:black]
skipsdist = True
skip_install = True
deps = black==19.10b0
commands = black aea benchmark examples packages scripts tests

[testenv:black-check]
skipsdist = True
skip_install = True
deps = black==19.10b0
commands = black aea benchmark examples packages scripts tests --check --verbose

[testenv:copyright_check]
skipsdist = True
skip_install = True
deps =
commands = {toxinidir}/scripts/check_copyright_notice.py --directory {toxinidir}

[testenv:hash_check]
skipsdist = True
usedevelop = True
deps = ipfshttpclient==0.6.0.post1
commands = {toxinidir}/scripts/generate_ipfs_hashes.py --check {posargs}

[testenv:package_version_checks]
skipsdist = True
usedevelop = True
deps =
commands = {toxinidir}/scripts/check_package_versions_in_docs.py

[testenv:package_dependencies_checks]
skipsdist = True
usedevelop = True
deps =
commands = {toxinidir}/scripts/check_package_dependencies.py

[testenv:docs]
skipsdist = True
skip_install = True
description = Build the documentation.
deps = markdown==3.2.1
       mkdocs==1.1
       mkdocs-material==4.6.3
       pymdown-extensions==6.3
       bs4==0.0.1
commands = pip3 install git+https://github.com/pugong/mkdocs-mermaid-plugin.git#egg=mkdocs-mermaid-plugin
           mkdocs build --clean

[testenv:docs-serve]
skipsdist = True
skip_install = True
description = Run a development server for working on documentation.
deps = markdown==3.2.1
       mkdocs==1.1
       mkdocs-material==4.6.3
       pymdown-extensions==6.3
       bs4==0.0.1
commands = pip3 install git+https://github.com/pugong/mkdocs-mermaid-plugin.git#egg=mkdocs-mermaid-plugin
           mkdocs build --clean
           python -c 'print("###### Starting local server. Press Control+C to stop server ######")'
           mkdocs serve -a localhost:8080

[testenv:flake8]
skipsdist = True
skip_install = True
deps = flake8==3.7.9
       flake8-bugbear==20.1.4
       flake8-docstrings==1.5.0
       flake8-import-order==0.18.1
       pydocstyle==3.0.0
commands = flake8 aea benchmark examples packages scripts tests

[testenv:liccheck]
skipsdist = True
usedevelop = True
deps = liccheck==0.4.3
commands = {toxinidir}/scripts/freeze_dependencies.py -o {envtmpdir}/requirements.txt
           liccheck -s strategy.ini -r {envtmpdir}/requirements.txt -l PARANOID

[testenv:mypy]
skipsdist = True
skip_install = True
deps = mypy==0.761
       aiohttp==3.6.2
       packaging==20.4
commands = mypy aea benchmark examples packages scripts tests

[testenv:pylint]
skipsdist = True
deps = pylint==2.5.2
       pytest==5.3.5
commands = sh -c "pylint aea benchmark packages scripts examples/* --disable=E1136"

[testenv:safety]
skipsdist = True
skip_install = True
deps = safety==1.8.5
commands = safety check -i 37524 -i 38038 -i 37776 -i 38039
