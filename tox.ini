; By default, testenvs are configured to:
; - don't skip dist (skipsdist = False)
; - don't skip the package installation (skip_install = False)
; - don't use source installation (usedevelop = False)
; where one of those steps is not necessary for the test,
; we set the associated flag (e.g. for linting we don't need
; the package installation).
[tox]
envlist = bandit, black, black-check, isort, isort-check, copyright_check, docs, flake8, liccheck, mypy, py{3.6,3.7,3.8,3.9,3.10}, dependencies_check, plugins_deps


[testenv]
basepython = python3
whitelist_externals = /bin/sh
passenv = *
extras = all
deps =
    aiohttp>=3.7.4,<3.8
    aioprometheus>=20.0.0,<21.0.0
    black==19.10b0
    colorlog==4.1.0
    defusedxml==0.7.1
    docker==4.2.0
    gym==0.15.6
    isort==5.7.0
    mistune==2.0.0a4
    numpy>=1.18.1
    oef==0.8.1
    openapi-core==0.13.2
    openapi-spec-validator==0.2.8
    pexpect==4.8.0
    pytest==7.0.0
    pytest-asyncio==0.16.0
    pytest-cov==3.0.0
    pytest-custom-exit-code==0.3.0
    pytest-randomly==3.10.3
    pytest-rerunfailures==10.2
    scikit-image>=0.17.2
    sqlalchemy==1.4.17
    temper-py==0.0.3
    yoti==2.14.0
    ; Plugin dependencies. We need this
    ; because we use --no-deps to install the plugins.
    ; aea_ledger_cosmos/aea_ledger_fetchai
    ecdsa==0.17.0
    asn1crypto==1.4.0
    bech32==1.2.0
    ; aea_ledger_ethereum
    web3==5.12.0
    ipfshttpclient==0.6.1
    eth-account==0.5.2
    ; for password encryption in cosmos
    pycryptodome==3.15.0
    blspy==1.0.14
	bip-utils==2.5.1
	python-mbedtls==2.2.0
	py-sr25519-bindings==0.1.4
    cosmpy>=0.5.0,<0.6.0


commands =
	; for some reason tox installs aea without respect to the dependencies version specified in setup.py. at least in CI env
	; so install current aea in a normal way
	pip install {toxinidir}[all]
    python -m pip install --no-deps file://{toxinidir}/plugins/aea-ledger-ethereum
    python -m pip install --no-deps file://{toxinidir}/plugins/aea-ledger-cosmos
    python -m pip install --no-deps file://{toxinidir}/plugins/aea-ledger-fetchai
    python -m pip install --no-deps file://{toxinidir}/plugins/aea-cli-ipfs
    pytest -rfE tests/ --cov=aea --cov=packages/fetchai/connections --cov=packages/fetchai/contracts --cov=packages/fetchai/protocols --cov=packages/fetchai/skills --cov-report=html --cov-report=xml --cov-report=term --cov-report=term-missing --cov-config=.coveragerc {posargs}

[testenv:py3.6]
basepython = python3.6
deps =
    {[testenv]deps}
    tensorflow==2.4.0

[testenv:py3.7]
basepython = python3.7
deps =
    {[testenv]deps}
    tensorflow==2.8.1

[testenv:py3.7-cov]
basepython = python3.7
usedevelop = True
deps =
    {[testenv]deps}
    tensorflow==2.8.1

[testenv:py3.8]
basepython = python3.8
deps =
    {[testenv]deps}
    tensorflow==2.8.1

[testenv:py3.9]
basepython = python3.9
deps =
    {[testenv]deps}
    tensorflow==2.8.1

[testenv:py3.10]
basepython = python3.10
deps =
    {[testenv]deps}
    tensorflow==2.8.1

[plugins]
commands =
    python -m pip install --no-deps file://{toxinidir}/plugins/aea-ledger-ethereum
    python -m pip install --no-deps file://{toxinidir}/plugins/aea-ledger-cosmos
    python -m pip install --no-deps file://{toxinidir}/plugins/aea-ledger-fetchai
    python -m pip install --no-deps file://{toxinidir}/plugins/aea-cli-ipfs
    pytest -rfE plugins/aea-ledger-fetchai/tests --cov-report=html --cov-report=xml --cov-report=term --cov-report=term-missing --cov=aea_ledger_fetchai --cov-config=.coveragerc --suppress-no-test-exit-code {posargs}
    pytest -rfE plugins/aea-ledger-ethereum/tests --cov-report=html --cov-report=xml --cov-report=term --cov-report=term-missing --cov=aea_ledger_ethereum --cov-config=.coveragerc --suppress-no-test-exit-code {posargs}
    pytest -rfE plugins/aea-ledger-cosmos/tests --cov-report=html --cov-report=xml --cov-report=term --cov-report=term-missing --cov=aea_ledger_cosmos --cov-config=.coveragerc --suppress-no-test-exit-code {posargs}
    pytest -rfE plugins/aea-cli-ipfs/tests --cov-report=html --cov-report=xml --cov-report=term --cov-report=term-missing --cov=aea_cli_ipfs --cov-config=.coveragerc --suppress-no-test-exit-code {posargs}

[testenv:plugins-py3.6]
basepython = python3.6
commands = {[plugins]commands}

[testenv:plugins-py3.7]
basepython = python3.7
commands = {[plugins]commands}

[testenv:plugins-py3.7-cov]
basepython = python3.7
usedevelop = True
commands = {[plugins]commands}

[testenv:plugins-py3.8]
basepython = python3.8
commands = {[plugins]commands}

[testenv:plugins-py3.9]
basepython = python3.9
commands = {[plugins]commands}

[testenv:plugins-py3.10]
basepython = python3.10
commands = {[plugins]commands}

[testenv:bandit]
skipsdist = True
skip_install = True
deps =
    bandit==1.7.0
commands = bandit -r aea benchmark examples packages \
             plugins/aea-ledger-fetchai/aea_ledger_fetchai \
             plugins/aea-ledger-ethereum/aea_ledger_ethereum \
             plugins/aea-ledger-cosmos/aea_ledger_cosmos \
             plugins/aea-cli-ipfs/aea_cli_ipfs
           bandit -s B101 -r tests scripts

[testenv:black]
skipsdist = True
skip_install = True
deps =
    black==19.10b0
commands = black aea benchmark examples packages plugins scripts tests

[testenv:black-check]
skipsdist = True
skip_install = True
deps =
    black==19.10b0
commands =black aea benchmark examples packages plugins scripts tests --check --verbose

[testenv:isort]
skipsdist = True
skip_install = True
deps =
    isort==5.7.0
commands = isort aea benchmark examples packages plugins scripts tests

[testenv:isort-check]
skipsdist = True
skip_install = True
deps =
    isort==5.7.0
commands = isort --check-only --verbose aea benchmark examples packages plugins scripts tests

[testenv:copyright_check]
skipsdist = True
skip_install = True
deps =
commands = {toxinidir}/scripts/check_copyright_notice.py --directory {toxinidir}

[testenv:hash_check]
skipsdist = True
usedevelop = True
deps =
    ipfshttpclient==0.6.1
commands = {toxinidir}/scripts/generate_ipfs_hashes.py --check {posargs}

[testenv:package_version_checks]
skipsdist = True
usedevelop = True
deps =
commands = {toxinidir}/scripts/check_package_versions_in_docs.py

[testenv:package_dependencies_checks]
skipsdist = True
usedevelop = True
deps =
commands = {toxinidir}/scripts/check_packages.py

[testenv:docs]
skipsdist = True
skip_install = True
deps =
    bs4==0.0.1
    jinja2==3.0.3
    markdown==3.3.6
    mkdocs==1.1
    pygments ==2.7.4
    mkdocs-material==6.2.8
    pymdown-extensions==9.1
commands = pip3 install git+https://github.com/pugong/mkdocs-mermaid-plugin.git#egg=mkdocs-mermaid-plugin
           mkdocs build --clean

[testenv:docs-serve]
skipsdist = True
skip_install = True
deps =
    bs4==0.0.1
    jinja2==3.0.3
    markdown==3.3.6
    mkdocs==1.1
    mkdocs-material==6.2.8
    pymdown-extensions==9.1
commands = pip3 install git+https://github.com/pugong/mkdocs-mermaid-plugin.git#egg=mkdocs-mermaid-plugin
           mkdocs build --clean
           python -c 'print("###### Starting local server. Press Control+C to stop server ######")'
           mkdocs serve -a localhost:8080

[testenv:flake8]
skipsdist = True
skip_install = True
deps =
    flake8==3.7.9
    flake8-bugbear==20.1.4
    flake8-docstrings==1.6.0
    flake8-eradicate==0.4.0
    flake8-isort==4.0.0
    pydocstyle==3.0.0
commands = flake8 aea benchmark examples packages plugins scripts tests

[testenv:liccheck]
skipsdist = True
usedevelop = True
deps =
    liccheck==0.6.0
commands = {toxinidir}/scripts/freeze_dependencies.py -o {envtmpdir}/requirements.txt
           liccheck -s strategy.ini -r {envtmpdir}/requirements.txt -l PARANOID

[testenv:mypy]
skipsdist = True
skip_install = True
deps =
    aiohttp>=3.7.4,<3.8
    base58>=1.0.3
    bech32==1.2.0
    mypy==0.761
    packaging>=20.4,<=21.5
    web3==5.12.0
    yoti==2.14.0
    asn1crypto==1.4.0
commands = mypy aea packages --disallow-untyped-defs
           mypy benchmark examples  --check-untyped-defs
           mypy scripts tests

[testenv:pylint]
whitelist_externals = /bin/sh
skipsdist = True
deps =
    pylint==2.6.0
    pytest==7.0.0
    gitpython>=3.1.14

commands =
    python -m pip install --no-deps file://{toxinidir}/plugins/aea-ledger-ethereum
    python -m pip install --no-deps file://{toxinidir}/plugins/aea-ledger-cosmos
    python -m pip install --no-deps file://{toxinidir}/plugins/aea-ledger-fetchai
    python -m pip install --no-deps file://{toxinidir}/plugins/aea-cli-ipfs
    sh -c "pylint aea benchmark packages plugins/aea-ledger-fetchai/aea_ledger_fetchai plugins/aea-ledger-ethereum/aea_ledger_ethereum plugins/aea-ledger-cosmos/aea_ledger_cosmos plugins/aea-cli-ipfs/aea_cli_ipfs scripts examples/*"

[testenv:safety]
skipsdist = True
skip_install = True
deps =
    safety==1.10.3
commands = safety check -i 37524 -i 38038 -i 37776 -i 38039 -i 39621 -i 40291 -i 39706

[testenv:vulture]
skipsdist = True
skip_install = True
deps =
    vulture==2.3
commands = vulture aea scripts/whitelist.py --exclude "*_pb2.py"

[testenv:darglint]
skipsdist = True
skip_install = True
deps =
    darglint==1.8.1
commands = darglint aea benchmark examples libs packages plugins scripts

[testenv:check_doc_links]
skipsdist = True
usedevelop = True
deps =
commands = {toxinidir}/scripts/check_doc_links.py

[testenv:check_api_docs]
skipsdist = True
usedevelop = True
deps =
    pydoc-markdown==3.10.3
commands = {toxinidir}/scripts/generate_api_docs.py --check-clean

[testenv:check_generate_all_protocols]
skipsdist = True
usedevelop = True
deps =
    ipfshttpclient==0.6.1
    black==19.10b0
    isort==5.7.0
commands = {toxinidir}/scripts/generate_all_protocols.py --no-bump --check-clean

[testenv:spell_check]
skipsdist = True
usedevelop = True
deps =
commands = {toxinidir}/scripts/spell-check.sh


[testenv:dependencies_check]
skipsdist = True
skip_install = True
commands =
	pip install {toxinidir}[all]
	pip uninstall aea  -y
	python {toxinidir}/scripts/check_imports_and_dependencies.py


[testenv:plugins_env]
skipsdist = True
skip_install = True
passenv = *
deps =
	.[all]
whitelist_externals = /bin/sh
commands =
	- /bin/sh -c "rm -fr ./*private_key.txt"
	{posargs}
	
