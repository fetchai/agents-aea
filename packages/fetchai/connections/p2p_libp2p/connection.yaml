name: p2p_libp2p
author: fetchai
version: 0.27.1
type: connection
description: The p2p libp2p connection implements an interface to standalone golang
  go-libp2p node that can exchange aea envelopes with other agents connected to the
  same DHT.
license: Apache-2.0
aea_version: '>=1.0.0, <2.0.0'
fingerprint:
  README.md: Qmcovq8w58f3D948tuoNcXk5ThcYWtNAXewy8roU6jdKYW
  __init__.py: QmcibHXQV8uZnMRJe7jNGEFeUKns1ZF2QR9c6mxKMbV4oa
  check_dependencies.py: QmWt5a3svTV4VRGbr2tRW9dZoSENnTzi344mDwoMDA9jww
  connection.py: QmehiDZMur9JVKVeCXUhWqKXwoAiwWR7h5XH8uvwdkRFf8
  consts.py: QmNbua6EsorAf3FS4fCmCHBZ9TRZ6ENkZoHTyA9TEJZqpy
  libp2p_node/.dockerignore: QmVwyNjya468nRTxSjFP73dSzQdSffp74osz5dGEAHHweA
  libp2p_node/Dockerfile: QmeZ6KJf4cpgL7DY6qdWetVfTPPijUvHxoCUbYgSS3SsWM
  libp2p_node/Makefile: Qmezxsp96mW85mJhjGAarLmwWJG9JvGJowcY5h56oPB9bt
  libp2p_node/README.md: QmRBC7o5y1TBQGwviJ9XxywdeuSSz6dNgvGE9wQhFPES4D
  libp2p_node/acn/utils.go: Qmb39aDGu7N5a8JPdHeRsjSzJ9fyKp2jT3EkULocvGGYKV
  libp2p_node/aea/api.go: QmW7mHHShumfDHg9Ds1nxHZJN4EAHGLrr15jLX7kKYkcV9
  libp2p_node/aea/envelope.pb.go: QmRfUNGpCeVJfsW3H1MzCN4pwDWgumfyWufVFp6xvUjjug
  libp2p_node/aea/envelope.proto: QmVuvesmfgzj5aKnbFoCocoGEv3T9MR7u6KWn7CT5yfjGi
  libp2p_node/aea/pipe.go: QmdY77nQhJt5ojfcpJn2quaxdseGxS8GymQbzNvizkXNoz
  libp2p_node/aea/utils.go: QmbPhDuPZzzA8hrf7U5uLxsVQqY31BHJbv9fiGYEPDg1Go
  libp2p_node/common/common.go: QmeGr6xMzqkBVJMnWzCTcXJVQj2A8RK64mhTSewZJKpiJa
  libp2p_node/dht/common/handlers.go: Qmb5bvheRaddLXmcjwLNPyKq3SX5dqWUwc6aop5YjE9WMx
  libp2p_node/dht/dhtclient/dhtclient.go: QmP9Jzr7s38iJPuWUuMuFJ8TiepHT2AwaYzzKZ7hgWAUWg
  libp2p_node/dht/dhtclient/dhtclient_test.go: QmY5YQVYPHYdHc3GXPgbMQBtMstEpYiik1KtZH9ZchJVNh
  libp2p_node/dht/dhtclient/options.go: QmbjHT3ZXFo5GaMDTFbpZVRNiq3KPeoQWuGQuDaz7QJfaU
  libp2p_node/dht/dhtnode/dhtnode.go: QmfYx33eCLKLz7cVGrj3wTRF9oLjeS8yXR7kSKmQSfHPP8
  libp2p_node/dht/dhtnode/streams.go: Qmc2JcyiU4wHsgDj6aUunMAp4c5yMzo2ixeqRZHSW5PVwo
  libp2p_node/dht/dhtnode/utils.go: QmUabTTyRXixEEfksTzSNiHsqF9GcQ9qXpfwVY3VNsXBYK
  libp2p_node/dht/dhtpeer/benchmarks_test.go: QmeXZbWBxwGY33oRRogFPv61qJu28ufmoprGkmZVrQ9kEV
  libp2p_node/dht/dhtpeer/dhtpeer.go: Qme7jvbR5JLnxvnRxaPxZ76Pq2Pece1C95ZkJxoY9a4YwE
  libp2p_node/dht/dhtpeer/dhtpeer_test.go: QmT9SyDFBgDQKPLxtNn2qw3kwLzctCh4MrQWJ1HnERMPu9
  libp2p_node/dht/dhtpeer/mailbox.go: QmSgWxkVVQQSrMux8WNvvLbWRfZCb7ZChr6PjumyoW5vdT
  libp2p_node/dht/dhtpeer/notifee.go: Qmes2KPbWecKZu6Bh3mThEsPs74W3LwD6y3Mzrai1fV7zi
  libp2p_node/dht/dhtpeer/options.go: QmXiQ1iKHWCGZLKu2YTRkkLkJ7opR7LzsWxiwktKYHc3Va
  libp2p_node/dht/dhtpeer/utils.go: QmPWx5716sBX43gkCqHHXMmQ8hcg5KBbXqCsRGAnqJcSZw
  libp2p_node/dht/dhttests/dhttests.go: QmSe8XsEhMJAWuokeWtPLXP4m9G5rDEAXrrQWBcma8t71c
  libp2p_node/dht/monitoring/file.go: QmZwH59RcraRfgYjugVafVojakv1oEcgBUKuMdFAoeZBhS
  libp2p_node/dht/monitoring/prometheus.go: QmQvXjEozVPMvRjda5WGRAU5b7cfUcRZUACQkTESG7Aewu
  libp2p_node/dht/monitoring/service.go: QmT47y2LHZECYcoE2uJ9QCGh3Kq8ePhYedo8dQE7X7v6YV
  libp2p_node/go.mod: QmWJwSZP3BzuyZjSUUADTuKD7Y3LhJE8NSd8CVke7noFeD
  libp2p_node/go.sum: QmSPKTBqNZJaTSacn5cPN2sC3MqwzeAN7L2RnCwRhpGR1Q
  libp2p_node/libp2p_node.go: Qmcp82gLaEpyJU7Q8NnsB6Wp7wF5FMV5ZRv9Y3XdNgPJ2L
  libp2p_node/link: QmXoSqhnHAFDZiZYT3F1txkjrsjtxDAkPVg9oG9Kvpv2dx
  libp2p_node/mocks/mock_host.go: QmSJ7g6S2PGhC5j8xBQyrjs56hXJGEewkgFgiivyZDthbW
  libp2p_node/mocks/mock_net.go: QmVKnkDdH8XCJ9jriEkZui4NoB36GBYF2DtfX8uCqAthMw
  libp2p_node/mocks/mock_network.go: QmbVVvd3wrY6PnVs1rn9T9m6FD5kbmSVJLwhSxUgSLAiM5
  libp2p_node/mocks/mock_peerstore.go: QmaPCBrwsTeWCHZoAKDzaxN6uhY3bez1karzeGeovWYwkB
  libp2p_node/protocols/acn/v1_0_0/acn.pb.go: QmWDoniHr3wa5freLHDESv7SgC9ggYenrLyibw4jFkTc4r
  libp2p_node/protocols/acn/v1_0_0/acn.proto: QmcguMcKttJfsuPYrUVWFJ1Trr1VxrSSfan94Z3yNAxNEW
  libp2p_node/protocols/acn/v1_0_0/acn.yaml: QmeqaYRWL5bVRE8FKgbiAspgFkoi5HKtkSncT7fCf1JAex
  libp2p_node/utils/utils.go: QmRYpCrW8fia1qtmraGcGRhFz5KgAJ8zwGBFP2DJkpFnm8
  libp2p_node/utils/utils_test.go: QmaUTrtqhPYcCLTHnJic4EN7R1pZY8ra7QbeRrPuedgAuc
fingerprint_ignore_patterns: []
build_entrypoint: check_dependencies.py
connections: []
protocols:
- fetchai/acn:1.1.2
class_name: P2PLibp2pConnection
config:
  delegate_uri: 127.0.0.1:11000
  entry_peers: []
  ledger_id: fetchai
  local_uri: 127.0.0.1:9000
  log_file: libp2p_node.log
  max_node_restarts: 5
  monitoring_uri: null
  node_connection_timeout: 10
  public_uri: 127.0.0.1:9000
  storage_path: null
cert_requests:
- identifier: acn
  ledger_id: fetchai
  message_format: '{public_key}'
  not_after: '2023-01-01'
  not_before: '2022-01-01'
  public_key: fetchai
  save_path: .certs/conn_cert.txt
excluded_protocols: []
restricted_to_protocols: []
dependencies: {}
is_abstract: false
