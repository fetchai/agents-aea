name: AEA framework sanity checks and tests

on:
  push:
    branches:
      - develop
      - main
  pull_request:

jobs:

  common_checks_1:
    continue-on-error: False
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@master
        with:
          python-version: 3.6
      - name: Install dependencies (ubuntu-latest)
        run: |
          sudo apt-get update --fix-missing
          sudo apt-get autoremove
          sudo apt-get autoclean
          pip install pipenv
      - name: Pipenv lock
        run: pipenv lock
      - name: Check plugin consistency
        run: |
          # these two files should not be different;
          # we vendorize main "cosmos.py" module in fetchai crypto plugin package
          diff plugins/aea-crypto-cosmos/aea_crypto_cosmos/cosmos.py plugins/aea-crypto-fetchai/aea_crypto_fetchai/_cosmos.py

          # check diff between plugins' LICENSE and main LICENSE
          diff LICENSE plugins/aea-crypto-cosmos/LICENSE
          diff LICENSE plugins/aea-crypto-ethereum/LICENSE
          diff LICENSE plugins/aea-crypto-fetchai/LICENSE

  common_checks_2:
    continue-on-error: False
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@master
        with:
          python-version: 3.6
      - uses: actions/setup-go@master
        with:
          go-version: '^1.14.0'
      - name: Install dependencies (ubuntu-latest)
        run: |
          sudo apt-get update --fix-missing
          sudo apt-get autoremove
          sudo apt-get autoclean
          pip install tox
      - name: Security Check
        run: tox -e bandit
      - name: Safety Check
        run: tox -e safety
      - name: Code style check
        run: |
          tox -e black-check
          tox -e isort-check
          tox -e flake8
      - name: Unused code check
        run: tox -e vulture
      - name: Static type check
        run: tox -e mypy
      - name: Golang code style check
        uses: golangci/golangci-lint-action@v1
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        with:
          version: v1.28
          working-directory: packages/fetchai/connections/p2p_libp2p/

  common_checks_3:
    continue-on-error: False
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@master
        with:
          python-version: 3.6
      - name: Install dependencies (ubuntu-latest)
        run: |
          sudo apt-get update --fix-missing
          sudo apt-get autoremove
          sudo apt-get autoclean
          pip install tox
      - name: Pylint check
        run: |
          tox -e pylint

  common_checks_4:
    continue-on-error: False
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@master
        with:
          python-version: 3.6
      - name: Install dependencies (ubuntu-latest)
        run: |
          sudo apt-get update --fix-missing
          sudo apt-get autoremove
          sudo apt-get autoclean
          pip install tox
          pip install --user --upgrade setuptools
          # install Protobuf compiler
          wget https://github.com/protocolbuffers/protobuf/releases/download/v3.11.4/protoc-3.11.4-linux-x86_64.zip
          unzip protoc-3.11.4-linux-x86_64.zip -d protoc
          sudo mv protoc/bin/protoc /usr/local/bin/protoc
          # install IPFS
          sudo apt-get install -y wget
          wget -O ./go-ipfs.tar.gz https://dist.ipfs.io/go-ipfs/v0.6.0/go-ipfs_v0.6.0_linux-amd64.tar.gz
          tar xvfz go-ipfs.tar.gz
          sudo mv go-ipfs/ipfs /usr/local/bin/ipfs
          ipfs init
          make protolint_install
      - name: License Check
        run: tox -e liccheck
      - name: Copyright Check
        run: tox -e copyright_check
      - name: AEA Package Hashes Check
        run: tox -e hash_check -- --timeout 40.0
      - name: Check package versions in documentation
        run: tox -e package_version_checks
      - name: Check package dependencies
        run: tox -e package_dependencies_checks
      - name: Check generate protocols
        run: tox -e check_generate_all_protocols
      - name: Generate Documentation
        run: tox -e docs

  common_checks_5:
    continue-on-error: False
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: github.base_ref == 'main'
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@master
        with:
          python-version: 3.7
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Install dependencies (ubuntu-latest)
        run: |
          sudo apt-get update --fix-missing
          sudo apt-get autoremove
          sudo apt-get autoclean
          pip install tox
      - name: Install markdown-spellcheck
        run: sudo npm install -g markdown-spellcheck
      - name: Check Docs links
        run: tox -e check_doc_links
      - name: Check API Docs updated
        run: tox -e check_api_docs
      - name: Check spelling
        run: tox -e spell_check
  dependencies_checks:
    continue-on-error: False
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@master
        with:
          python-version: 3.6
      - name: Install current aea
        run: |
          pip install -e .[all]
      - name: Check dependecnies and imports
        run: |
          python ./scripts/check_imports_and_dependencies.py
  protolint:
    continue-on-error: False
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@master
        with:
          python-version: 3.6
      - uses: actions/setup-go@master
        with:
          go-version: '^1.14.0'
      - name: Install protolint (ubuntu-latest)
        run: |
          sudo apt-get update --fix-missing
          sudo apt-get autoremove
          sudo apt-get autoclean
          make protolint_install
      - name: Protolint check
        run: |
          make protolint
  integration_checks:
    continue-on-error: True
    needs:
    - common_checks_1
    - common_checks_2
    - common_checks_3
    - common_checks_4
    runs-on: ubuntu-latest
    timeout-minutes: 50
    steps:
    - uses: actions/checkout@master
    - uses: actions/setup-python@master
      with:
        python-version: 3.8
    - uses: actions/setup-go@master
      with:
        go-version: '^1.14.0'
    - name: Install dependencies (ubuntu-latest)
      run: |
        sudo apt-get update --fix-missing
        sudo apt-get autoremove
        sudo apt-get autoclean
        pip install tox
        # install Protobuf compiler
        wget https://github.com/protocolbuffers/protobuf/releases/download/v3.11.4/protoc-3.11.4-linux-x86_64.zip
        unzip protoc-3.11.4-linux-x86_64.zip -d protoc
        sudo mv protoc/bin/protoc /usr/local/bin/protoc
    - name: Sync AEA loop integration tests
      run: |
        tox -e py3.8 -- -m 'sync'  # --aea-loop sync
    - name: Async integration tests
      run: tox -e py3.8 -- -m 'integration and not unstable and not ledger'

  integration_checks_ledger:
    continue-on-error: True
    needs:
      - common_checks_1
      - common_checks_2
      - common_checks_3
      - common_checks_4
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@master
        with:
          python-version: 3.8
      - name: Install dependencies (ubuntu-latest)
        run: |
          sudo apt-get update --fix-missing
          sudo apt-get autoremove
          sudo apt-get autoclean
          pip install tox
      - name: Install Rust
        run: |
          # Install rust
          curl --proto '=https' --tlsv1.2 https://sh.rustup.rs -sSf > install.sh
          sudo chmod u+x install.sh
          ./install.sh -y
          rustup default stable
          cargo version
      - name: Install fetchcli
        run: |
          # Update the configuration for Rust
          rustup target list --installed
          rustup target add wasm32-unknown-unknown

          # Install fetchd
          git clone https://github.com/fetchai/fetchd.git
          cd fetchd
          git checkout release/v0.2.x
          make install
          echo "PATH=$PATH:${HOME}/go/bin" >> $GITHUB_ENV
      - name: Check fetchcli installation
        run: |
          # Check if fetchcli is properly installed
          which fetchcli
          fetchcli version
      - name: Configure fetchcli
        run: |
          fetchcli config chain-id agent-land
          fetchcli config trust-node false
          fetchcli config node https://rpc-agent-land.fetch.ai:443
          fetchcli config output json
          fetchcli config indent true
          fetchcli config broadcast-mode block
      - name: Integration tests
        run: tox -e py3.8 -- -m 'integration and not unstable and ledger'

  platform_checks:
    continue-on-error: True
    needs:
    - common_checks_1
    - common_checks_2
    - common_checks_3
    - common_checks_4
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python_version: [3.6, 3.7, 3.8, 3.9]
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@master
    - uses: actions/setup-python@master
      with:
        python-version: ${{ matrix.python_version }}
    - uses: actions/setup-go@master
      with:
        go-version: '^1.14.0'
    - if: matrix.os == 'ubuntu-latest'
      name: Install dependencies (ubuntu-latest)
      run: |
        sudo apt-get update --fix-missing
        sudo apt-get autoremove
        sudo apt-get autoclean
        pip install tox
        # install Protobuf compiler
        wget https://github.com/protocolbuffers/protobuf/releases/download/v3.11.4/protoc-3.11.4-linux-x86_64.zip
        unzip protoc-3.11.4-linux-x86_64.zip -d protoc
        sudo mv protoc/bin/protoc /usr/local/bin/protoc
        make protolint_install
    # sudo apt-get install -y protobuf-compiler
    # use sudo rm /var/lib/apt/lists/lock above in line above update if dependency install failures persist
    # use sudo apt-get dist-upgrade above in line below update if dependency install failures persist
    - if: matrix.os == 'macos-latest'
      name: Install dependencies (macos-latest)
      run: |
        pip install tox
        brew install gcc
        # brew install protobuf
        # brew install https://raw.githubusercontent.com/Homebrew/homebrew-core/72457f0166d5619a83f508f2345b22d0617b5021/Formula/protobuf.rb
        wget https://github.com/protocolbuffers/protobuf/releases/download/v3.11.4/protoc-3.11.4-osx-x86_64.zip
        unzip protoc-3.11.4-osx-x86_64.zip -d protoc
        sudo mv protoc/bin/protoc /usr/local/bin/protoc
        brew tap yoheimuta/protolint
        brew install protolint
    - if: matrix.os == 'windows-latest'
      name: Install dependencies (windows-latest)
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      run: |
        python -m pip install -U pip
        echo "::add-path::C:\Program Files (x86)\Windows Kits\10\bin\10.0.18362.0\x64"
        choco install protoc --version 3.11.4
        choco install mingw -y
        choco install make -y
        # to check make was installed
        make --version
        pip install tox
        # wget https://github.com/protocolbuffers/protobuf/releases/download/v3.11.4/protoc-3.11.4-win64.zip
        # unzip protoc-3.11.4-win64.zip -d protoc
        # sudo mv protoc/bin/protoc /usr/local/bin/protoc
        python scripts/update_symlinks_cross_platform.py
        make protolint_install_win
        # just check protolint runs
        protolint version
    - if: True
      name: Unit tests
      run: |
        tox -e py${{ matrix.python_version }} -- -m 'not integration and not unstable'
    - name: Plugin tests
      run: |
        tox -e plugins-py${{ matrix.python_version }} -- --cov-append -m 'not integration and not unstable'

  platform_checks_sync_aea_loop:
    continue-on-error: True
    needs:
    - common_checks_1
    - common_checks_2
    - common_checks_3
    - common_checks_4
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
    - uses: actions/checkout@master
    - uses: actions/setup-python@master
      with:
        python-version: 3.8
    - uses: actions/setup-go@master
      with:
        go-version: '^1.14.0'
    - name: Install dependencies (ubuntu-latest)
      run: |
        sudo apt-get update --fix-missing
        sudo apt-get autoremove
        sudo apt-get autoclean
        pip install tox
        wget https://github.com/protocolbuffers/protobuf/releases/download/v3.11.4/protoc-3.11.4-linux-x86_64.zip
        unzip protoc-3.11.4-linux-x86_64.zip -d protoc
        sudo mv protoc/bin/protoc /usr/local/bin/protoc
        make protolint_install
    - name: Unit tests with sync agent loop
      run: |
        tox -e py3.8 -- --aea-loop sync -m 'not integration and not unstable'

  golang_checks:
    continue-on-error: True
    needs:
    - common_checks_1
    - common_checks_2
    - common_checks_3
    - common_checks_4
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: [3.6]
    timeout-minutes: 30
    steps:
    - uses: actions/checkout@master
    - uses: actions/setup-python@master
      with:
        python-version: ${{ matrix.python-version }}
    - uses: actions/setup-go@master
      with:
        go-version: '^1.14.0'
    - if: matrix.python-version == '3.6'
      name: Golang unit tests
      working-directory: ./packages/fetchai/connections/p2p_libp2p
      run: go test -p 1 -timeout 0 -count 1 -v ./...

  coverage_checks:
    continue-on-error: True
    needs:
    - integration_checks
    - integration_checks_ledger
    - platform_checks
#    - platform_checks_sync_aea_loop
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@master
    - uses: actions/setup-python@master
      with:
        python-version: 3.7
    - uses: actions/setup-go@master
      with:
        go-version: '^1.14.0'
    - name: Install dependencies (ubuntu-latest)
      run: |
        sudo apt-get update --fix-missing
        sudo apt-get autoremove
        sudo apt-get autoclean
        pip install tox
        # install Protobuf compiler
        wget https://github.com/protocolbuffers/protobuf/releases/download/v3.11.4/protoc-3.11.4-linux-x86_64.zip
        unzip protoc-3.11.4-linux-x86_64.zip -d protoc
        sudo mv protoc/bin/protoc /usr/local/bin/protoc
        make protolint_install
    # sudo apt-get install -y protobuf-compiler
    - name: Run all tests
      run: |
        tox -e py3.7-cov -- --ignore=tests/test_docs --ignore=tests/test_examples --ignore=tests/test_packages/test_contracts --ignore=tests/test_packages/test_skills_integration --ignore=plugins -m 'not unstable'
        tox -e plugins-py3.7-cov -- --cov-append -m 'not unstable'
      continue-on-error: true
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
